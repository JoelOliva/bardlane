@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div class="text-center">
    <h1 class="display-4 mb-5">Discover music and producers that suits your needs</h1>
	<div class="row">
		<div class="col col-lg-8 mx-auto">
			<table id="playlist" class="table table-hover mx-auto text-end">
				<tbody>
					@for (int i = 0; i < Model.Tracks.Length; i++)
					{
						<tr>
							<td class="d-flex justify-content-between align-items-center">
								<button class="btn" id="@i"><svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 24 24"><path fill="grey" d="M19.105 11.446a2.34 2.34 0 0 1-.21 1c-.15.332-.38.62-.67.84l-9.65 7.51a2.3 2.3 0 0 1-1.17.46h-.23a2.2 2.2 0 0 1-1-.24a2.29 2.29 0 0 1-1.28-2v-14a2.2 2.2 0 0 1 .33-1.17a2.27 2.27 0 0 1 2.05-1.1c.412.02.812.148 1.16.37l9.66 6.44c.294.204.54.47.72.78c.19.34.29.721.29 1.11" /></svg></button>
								<audio src="@Url.Content(Model.Tracks[i].Path)" class="track"></audio>
								<div class="text-secondary duration"></div>
								<div class="me-3 d-inline flex-grow-1">@Model.Tracks[i].Title - <span class="text-secondary">@Model.TrackAuthors[i]</span></div>
							</td>
						</tr>
					}
				</tbody>
			</table>

		</div>
	</div>
	<button class="btn text-secondary pt-2" style="font-size: 0.8em">Load more...</button>
</div>

@section Scripts {
	<script>
		const tracks = @Json.Serialize(Model.TrackTitles);
		const trackAuthors = @Json.Serialize(Model.TrackAuthors);
	</script>
	<script type="module" src="~/js/index.js"></script>
	<script type="module" src="~/js/player.js"></script>
}
